# -*- coding: utf-8 -*-
"""Real_class_collective_knowledge_map_Final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C1BJzrEIBaO7hKBpciKXktbUd34_C8sQ
"""

from pyvis.network import Network
import pandas as pd

file_names_2021 = ['Y2021_Student_01','Y2021_Student_02','Y2021_Student_03','Y2021_Student_04','Y2021_Student_05','Y2021_Student_06','Y2021_Student_07']
year2021_df = []
for i in range(len(file_names_2021)):
    temp_df = pd.read_csv("assets/Y2021/"+file_names_2021[i]+".csv",index_col=0)
    year2021_df.append(temp_df)

student_names_2021 = ['Student1','Student2','Student3','Student4','Student5','Student6','Student7']

file_names_2022 = ['Y2022_Student_01','Y2022_Student_02','Y2022_Student_03','Y2022_Student_04','Y2022_Student_05','Y2022_Student_06','Y2022_Student_07','Y2022_Student_08','Y2022_Student_09','Y2022_Student_10','Y2022_Student_11','Y2022_Student_12']
year2022_df = []
for i in range(len(file_names_2022)):
    temp_df = pd.read_csv("assets/Y2022/"+file_names_2022[i]+".csv",index_col=0)
    year2022_df.append(temp_df)

student_names_2022 = ['Student1','Student2','Student3','Student4','Student5','Student6','Student7','Student8','Student9','Student10','Student11','Student12']

file_names_2023 = ['Y2023_Student_01','Y2023_Student_02','Y2023_Student_03','Y2023_Student_04','Y2023_Student_05','Y2023_Student_06','Y2023_Student_07','Y2023_Student_08','Y2023_Student_09','Y2023_Student_10','Y2023_Student_11','Y2023_Student_12']
year2023_df = []
for i in range(len(file_names_2023)):
    temp_df = pd.read_csv("assets/Y2023/"+file_names_2023[i]+".csv",index_col=0)
    year2023_df.append(temp_df)

student_names_2023 = ['Amelia','Emma','Chloe','Mei','Lee','Zoey','Gabriela','Larissa','Harper','Juliana','Abigail','Evelyn']

keywords = pd.read_csv("dictionary 5.0 (final with subcategory).csv")["display concept"].tolist()

# the number shows which category the keyword belongs to
keywords_group = pd.read_csv("dictionary 5.0 (final with subcategory).csv")["category"].to_numpy()

# create color for each category
category_color = []
for i in keywords_group:
    if i == 1:
        category_color.append('#e3342f')
    if i == 2:
        category_color.append('#f6993f')
    if i == 3:
        category_color.append('#ffed4a')
    if i == 4:
        category_color.append('#38c172')
    if i == 5:
        category_color.append('#4dc0b5')
    if i == 6:
        category_color.append('#3490dc')
    if i == 7:
        category_color.append('#6574cd')
    if i == 8:
        category_color.append('#9561e2')
    if i == 9:
        category_color.append('#f66d9b')

def class_collective_knowledge_map(class_df, student_names_year):
    nets = []
    for i in range(class_df[0].shape[0]):
        net = Network(notebook=True)
        student_names = []
        occurence = []
        
        for n in range(len(keywords)):
            student_names.append([])
            occurence.append(0)
        for number, student_df in enumerate(class_df):
            for s, value in enumerate(student_df.iloc[i]):
                if value == 1:
                    #student_names[s].append("student"+str(number+1))
                    student_names[s].append(student_names_year[number])
            occurence = [sum(x) for x in zip(occurence, student_df.iloc[i])]
        for student_df in class_df:
            for p, value in enumerate(student_df.iloc[i]):
                if value == 1:
                    net.add_node(p, label=keywords[p], title='unset',size=(int(occurence[p])+1)*3, color=category_color[p])
        
        # add names of student who use the knowledge to corresponding knowledge node's tittle in the map
        for node in net.nodes:
            node['title'] = ', '.join(student_names[int(node['id'])])
            
        net_id = [dic['id'] for dic in net.nodes]
        
        for o in net_id:
            for u in net_id:
                if o != u and keywords_group[o] == keywords_group[u]:
                    net.add_edge(o,u,hidden=True)
        
        net.repulsion(central_gravity=0.8,spring_length=50)
        
        nets.append(net)
    
    return nets

class_map_2021 = class_collective_knowledge_map(year2021_df,student_names_2021)
class_map_2022 = class_collective_knowledge_map(year2022_df,student_names_2022)
class_map_2023 = class_collective_knowledge_map(year2023_df,student_names_2023)



for i, class_map in enumerate(globals()[f"class_map_2023"]):
    class_map.show(f"assets/2023_class_{i+1}.html")
for i, class_map in enumerate(globals()[f"class_map_2022"]):
    class_map.show(f"assets/2022_class_{i+1}.html")
for i, class_map in enumerate(globals()[f"class_map_2021"]):
    class_map.show(f"assets/2021_class_{i+1}.html")



